name: Verify build

on: 
  push:
  pull_request:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Build & check WNFS swift bindings
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      # TODO: Ignore for now
      # - name: Check
      #   run: cargo check

      # - name: Format
      #   run: cargo fmt --all -- --check 

      # - name: Build Debug
      #   run: cargo build --verbose

      # - name: Run tests
      #   run: cargo test --verbose

      # - name: Build Release
      #   run: cargo build --verbose --release

      - name: Generate the C header
        run: cargo install --force cbindgen && cbindgen --lang C -o include/wnfsbindings.h .
      
      - name: Build the artifact
        if: startsWith(github.ref, 'refs/tags/')
        run: make

      - name: Upload release asset 
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: ./build/cocoapods-bundle.zip
          asset_name: cocoapods-bundle.zip
          asset_content_type: application/zip

      - name: Upload release asset checksum
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: ./build/cocoapods-bundle.zip.sha256
          asset_name: cocoapods-bundle.zip.sha256
          asset_content_type: text/plain